pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'nodejs16'
    }
    environment {
        SCANNER_HOME = tool name: 'sonar-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
        SONAR_PROJECT_KEY = 'Food-Clone-App-eks-argocd'
        SONAR_PROJECT_NAME = 'Food-Clone-App-eks-argocd'
        SONAR_QUALITY_PROFILE = 'Sonar-check'
    }
    
    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/harykryshnan-Master/Food-Clone-App-eks-argocd.git'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh """ 
                    ${env.SCANNER_HOME}/bin/sonar-scanner \
                    -Dsonar.projectKey=${env.SONAR_PROJECT_KEY} \
                    -Dsonar.projectName=${env.SONAR_PROJECT_NAME} \
                    -Dsonar.qualitygate.wait=true \
                    -Dsonar.qualitygate.timeout=300 \
                    -Dsonar.qualityprofile=${env.SONAR_QUALITY_PROFILE}
                    """
                }
            }
        }
        
        stage('Quality Gates') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    script {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
        
        stage('Dependency Install') {
            steps {
                sh "npm install"
            }
        }
        
        stage('Trivy Filesystem Scan') {
            steps {
                sh "trivy fs . > trivy-fs.txt"
            }
        }
    }
}
